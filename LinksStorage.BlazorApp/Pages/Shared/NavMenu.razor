
<MudAppBar Dense="true">
	<MudButton Href="/"><ApplicationLogo/></MudButton >
	<MudSpacer />
	<MudTooltip Duration="1000" Text="@(DarkTheme ? "Switch to Light Theme" : "Switch to Dark Theme")">
		<MudIconButton Icon="@(DarkTheme ? @Icons.Material.Rounded.LightMode : @Icons.Material.Outlined.DarkMode)" Color="Color.Inherit" OnClick="ChangeTheme" />
	</MudTooltip>
	<MudButton Href="/tags/management">Tags</MudButton >
	<AuthorizeView>
		<Authorized>
			<MudMenu Label="@(User?.Name ?? "NoName")">
				<MudMenuItem Href="/dashboard">Dashboard</MudMenuItem >
				<MudMenuItem Href="/profile/edit">Profile</MudMenuItem>
				<MudMenuItem Href="/logout">Logout</MudMenuItem>
			</MudMenu>
		</Authorized>
		<NotAuthorized>
			<MudButton  Href="/login">Login</MudButton >
			<MudButton  Href="/register">Register</MudButton >
		</NotAuthorized>
	</AuthorizeView>
</MudAppBar>
	

@code {
	[CascadingParameter]
	public MainLayout? Layout { get; set; }

	public bool DarkTheme => Layout?.DarkTheme ?? false;
	private User? User => Layout?.User;
	[Parameter]
	public EventCallback<bool> OnThemeChanged { get; set; }

	private async Task ChangeTheme()
	{
		if (OnThemeChanged.HasDelegate) await OnThemeChanged.InvokeAsync(!DarkTheme);
	}

}